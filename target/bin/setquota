#! /bin/bash

# shellcheck source=../scripts/helpers/index.sh
source /usr/local/bin/helpers/index.sh

source ./common/helper.sh
source ./common/quota.sh

function _main
{
  [[ ${1:-} == 'help' ]] && { __usage ; exit 0 ; }

  local MAIL_ACCOUNT="${1}"
  shift
  local QUOTA="${*}"

  _validate_parameters
  _quota_set_for_mail_account "${MAIL_ACCOUNT}" "${QUOTA}"
}

function __usage
{
  printf '%s' "${PURPLE}setquota${RED}(${YELLOW}8${RED})

${ORANGE}USAGE${RESET}
    ./setup.sh quota set <MAIL ACCOUNT> [<QUOTA>]

${ORANGE}OPTIONS${RESET}
    ${BLUE}Generic Program Information${RESET}
        help       Print the usage information.

${ORANGE}DESCRIPTION${RESET}
    Set a quota (storage limit) for an existing mail account.

    The quota value is in bytes. You may use a unit suffix for convenience,
    such as 10M for 10 MebiBytes (MiB). A value of 0 opts out of enforcing quota.

${ORANGE}EXAMPLES${RESET}
    ${LWHITE}./setup.sh quota set user@example.com 5G${RESET}
        The account 'user@example.com' is restricted to a 5GiB storage limit.

${ORANGE}EXIT STATUS${RESET}
    Exit status is 0 if command was successful. If wrong arguments are provided
    or arguments contain errors, the script will exit early with exit status 1.

"
}

function _validate_parameters
{
  _arg_expect_mail_account_has_local_and_domain_parts
  _account_should_already_exist

  _arg_expect_quota_valid_unit
}

_main "${@}"
