#! /bin/bash

# shellcheck source=../scripts/helpers/index.sh
source /usr/local/bin/helpers/index.sh

function __usage
{
  printf '%s' "${PURPLE}ADDALIAS${RED}(${YELLOW}8${RED})

${ORANGE}NAME${RESET}
    addalias - add an email alias for an existing user

${ORANGE}SYNOPSIS${RESET}
    ./setup.sh alias add <EMAIL ADDRESS> <RECIPIENT>

${ORANGE}OPTIONS${RESET}
    ${BLUE}Generic Program Information${RESET}
        help       Print the usage information.

${ORANGE}EXAMPLES${RESET}
    ${LWHITE}./setup.sh alias add alias-for-me@domain.tld admin@domain.tld${RESET}
        Add the alias alias-for-me@doamin.tld for the existing user
        admin@domain.tld.

${ORANGE}EXIT STATUS${RESET}
    Exit status is 0 if command was successful. If wrong arguments are provided
    or arguments contain errors, the script will exit early with exit status 1.

"
}

function _validate_parameters
{
  [[ -z ${EMAIL} ]] && { __usage ; _exit_with_error 'No alias specified' ; }
  [[ -z ${RECIPIENT} ]] && { __usage ; _exit_with_error 'No recipient specified' ; }
}

function _add_alias
{
  local DATABASE_VIRTUAL='/tmp/docker-mailserver/postfix-virtual.cf'

  # Escaped values for use in regex patterns:
  _EMAIL_=$(_escape "${EMAIL}")
  _RECIPIENT_=$(_escape "${RECIPIENT}")

  function _alias_already_exists
  {
    # Presumably intended to account for white-space or other aliases inbetween?
    # Why are only these values are considered valid?
    local VALID_CONTENT='[a-zA-Z@.\ ]*'
    local MATCH_PATTERN="^${_EMAIL_}${VALID_CONTENT}${_RECIPIENT_}"

    grep -qi "${MATCH_PATTERN}" "${DATABASE_VIRTUAL}" 2>/dev/null
  }

  function _account_has_an_existing_alias
  {
    grep -qi "^${_EMAIL_}" "${DATABASE_VIRTUAL}" 2>/dev/null
  }

  _alias_already_exists && _exit_with_error "Alias '${EMAIL} ${RECIPIENT}' already exists"

  if _account_has_an_existing_alias
  then
    # Append alias to existing entry:
    sed -i "/${EMAIL}/s/$/,${RECIPIENT}/" "${DATABASE_VIRTUAL}"
  else
    echo "${EMAIL} ${RECIPIENT}" >> "${DATABASE_VIRTUAL}"
  fi
}

[[ ${1:-} == 'help' ]] && { __usage ; exit 0 ; }

EMAIL="${1}"
RECIPIENT="${2}"

_validate_parameters
_add_alias
