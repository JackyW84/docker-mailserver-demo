dockermailserver

## Accessing dockermailserver
----------------------
{{ if .Values.service.loadBalancer.hostName }}
1. Visit http://{{ .Values.service.loadBalancer.hostName }}
{{- else }}
1. Get the dockermailserver URL to visit by running these commands in the same shell:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "dockermailserver.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/login

{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the loadBalancer IP to be available.
        You can watch the status of by running 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "dockermailserver.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc {{ template "dockermailserver.fullname" . }} --namespace {{ .Release.Namespace }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}/login

{{- else if contains "ClusterIP"  .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "component={{ template "dockermailserver.fullname" . }}-master" -o jsonpath="{.items[0].metadata.name}")
  echo http://127.0.0.1:{{ .Values.service.port }}
  kubectl port-forward $POD_NAME {{ .Values.service.port }}:{{ .Values.service.port }}

{{- end }}
{{- end }}

For more information, check the readme!

## Post-install configuration

### OpenDKIM

In order to sign outgoing emails with OpenDKIM, you'll need to generate a key for OpenDKIM, and then add that
key to a Kubernetes Secret.

To start off with, run ```../setup.sh config dkim```. Although this generates an error (below), the necessary keys and configs
_are_ created:

```
[funkypenguin:~] ../setup.sh config dkim
"docker inspect" requires at least 1 argument.
See 'docker inspect --help'.

Usage:  docker inspect [OPTIONS] NAME|ID [NAME|ID...]

Return low-level information on Docker objects
Creating DKIM private key /tmp/docker-mailserver/opendkim/keys/bob.com/mail.private
Creating DKIM KeyTable
Creating DKIM SigningTable
Creating DKIM private key /tmp/docker-mailserver/opendkim/keys/example.com/mail.private
Creating DKIM TrustedHosts
[funkypenguin:~ ]
```

Now we need the key ("/tmp/docker-mailserver/opendkim/keys/example.com/mail.private") in the example output above, inserted into a secret

Run the following, customizing for your own domain name:

```
kubectl create secret generic {{ template "dockermailserver.fullname" . }}-opendkim-keys \
 --from-file=config/opendkim/keys/example.com/mail.private \
 --namespace {{ template "dockermailserver.fullname" . }}
```

