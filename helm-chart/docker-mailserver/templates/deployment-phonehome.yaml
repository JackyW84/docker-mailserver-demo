---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}-phonehome
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      annotations:
        ## Only scrape pods that have a value of `true`
        prometheus.io/scrape: {{ default "true" .Values.monitoring.pod.scrape | quote }}
        ## If the metrics path is not `/metrics` override this.
        prometheus.io/port: {{ default "9102" .Values.monitoring.pod.port | quote }}
        ## scrape the pod on the indicated port instead of the default of `9102`.
        prometheus.io/path: {{ default "metrics" .Values.monitoring.pod.path | quote }}
        ## Scrape the pod over protocol
        prometheus.io/scheme: {{ default "http" .Values.monitoring.pod.scheme | quote }}
        ##
        ## Oftentimes, applicatins need to be restarted once once their configuration has been updated. However,
        ## Kubernetes makes the assumption that watching the file for configuration change is the applications
        ## responsibiliy, and doesn't restart when files change. So, the lines below modify a propery that does trigger
        ## a rotation of the applications so they are restarted when their dependencies change.
        ##
        ## See https://github.com/kubernetes/helm/blob/master/docs/charts_tips_and_tricks.md
        ##   #automatically-roll-deployments-when-configmaps-or-secrets-change
        ##
        # checksum/config: {{ include (print $.Chart.Name "/templates/secret.yaml") . | sha256sum }}
        # checksum/config: {{ include (print $.Chart.Name "/templates/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
    spec:

      # We need these phone-home containers to exist on the same node as dockermailserver
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "dockermailserver.fullname" . }}
            topologyKey: failure-domain.beta.kubernetes.io/zone
          
      containers:
        - name: phone-home-25
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "25"
          - name: BACKEND_PORT
            value: "30025"
          - name: SEND_PROXY
            value: "send-proxy"            
          - name: NAME
            value: "docker-mailserver-smtp"
          - name: WEBHOOK
            value: "https://traefik.funkypenguin.co.nz:9000/hooks/update-haproxy"
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret    
        - name: phone-home-587
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "587"
          - name: BACKEND_PORT
            value: "30587"
          - name: SEND_PROXY
            value: "send-proxy"               
          - name: NAME
            value: "docker-mailserver-submission"
          - name: WEBHOOK
            value: "https://traefik.funkypenguin.co.nz:9000/hooks/update-haproxy"
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret      
        - name: phone-home-465
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "465"
          - name: BACKEND_PORT
            value: "30465"
          - name: NAME
            value: "docker-mailserver-smtps"
          - name: WEBHOOK
            value: "https://traefik.funkypenguin.co.nz:9000/hooks/update-haproxy"
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret                                
        - name: phone-home-993
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "993"
          - name: BACKEND_PORT
            value: "30993"
          - name: NAME
            value: "docker-mailserver-pop3"
          - name: WEBHOOK
            value: "https://traefik.funkypenguin.co.nz:9000/hooks/update-haproxy"
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret      
 
      restartPolicy: "Always"
